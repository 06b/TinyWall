<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="btnCancel.Text" xml:space="preserve">
    <value>Cancelar</value>
  </data>
	<data name="btnOK.Text" xml:space="preserve">
    <value>Aplicar</value>
  </data>
	<data name="txtExceptionListFilter.AccessibleName" xml:space="preserve">
    <value>Filtrar</value>
  </data>
	<data name="btnAppRemoveAll.Text" xml:space="preserve">
    <value>Remover todos</value>
  </data>
	<data name="btnAppAutoDetect.Text" xml:space="preserve">
    <value>Detectar</value>
  </data>
	<data name="btnSubmitAssoc.Text" xml:space="preserve">
    <value>Enviar</value>
  </data>
	<assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
	<data name="label3.Location" type="System.Drawing.Point, System.Drawing">
		<value>23, 24</value>
	</data>
	<data name="label3.Text" xml:space="preserve">
    <value>Crie ou edite abaixo a lista de aplicativos cujo acesso à rede gostaria de controlar. Só os aplicativos desta lista poderão acessar a rede ou não, conforme especificado por você. Clique em DETECTAR se quiser que o TinyWall identifique e configure alguns programas. Se preferir, adicione programas você mesmo.</value>
  </data>
	<data name="btnAppRemove.Text" xml:space="preserve">
    <value>Remover</value>
  </data>
	<data name="btnAppModify.Text" xml:space="preserve">
    <value>Modificar</value>
  </data>
	<data name="btnAppAdd.Text" xml:space="preserve">
    <value>Adicionar aplicativo</value>
  </data>
	<data name="label4.Text" xml:space="preserve">
    <value>Filtro:</value>
  </data>
	<data name="tabPage3.Text" xml:space="preserve">
    <value>Aplicativos Fora da Lista de Acesso Controlado / Exceções</value>
  </data>
	<data name="label5.Text" xml:space="preserve">
    <value>Selecione tarefas ou aplicativos especiais do computador aos quais deseja conceder acesso ou não. Note que, se desabilitar opções recomendadas, você poderá limitar muito o funcionamento e a segurança de seu sistema.</value>
  </data>
	<data name="label2.Text" xml:space="preserve">
    <value>Opções de Configuração a Critério do Usuário</value>
  </data>
	<data name="label1.Text" xml:space="preserve">
    <value>Opções de Configuração Recomendadas</value>
  </data>
	<data name="tabPage2.Text" xml:space="preserve">
    <value>Exceções Especiais</value>
  </data>
	<data name="chkEnableHotkeys.Text" xml:space="preserve">
    <value>Habilitar teclas de atalho globais</value>
  </data>
	<data name="label11.Text" xml:space="preserve">
    <value>Idioma:</value>
  </data>
	<data name="chkEnableBlocklists.Text" xml:space="preserve">
    <value>Habilitar as listas de bloqueio</value>
  </data>
	<data name="chkLockHostsFile.Text" xml:space="preserve">
    <value>Impedir a modificação do arquivo de servidores (hosts)</value>
  </data>
	<data name="chkHostsBlocklist.Text" xml:space="preserve">
    <value>Lista de bloqueio de malware e anúncios com base em domínios</value>
  </data>
	<data name="chkAutoUpdateCheck.Text" xml:space="preserve">
    <value>Procurar atualização automaticamente</value>
  </data>
	<data name="chkBlockMalwarePorts.Text" xml:space="preserve">
    <value>Lista de bloqueio de malware com base em portas de acesso</value>
  </data>
	<data name="label9.Location" type="System.Drawing.Point, System.Drawing">
		<value>249, 58</value>
	</data>
	<data name="label9.Size" type="System.Drawing.Size, System.Drawing">
		<value>253, 42</value>
	</data>
	<data name="label9.Text" xml:space="preserve">
    <value>Para remover a proteção com senha, marque acima a opção "Proteger a configuração com senha" e deixe os campos de senha vazios.</value>
  </data>
	<data name="label8.Text" xml:space="preserve">
    <value>Repita:</value>
  </data>
	<data name="label7.Text" xml:space="preserve">
    <value>Senha:</value>
  </data>
	<data name="chkChangePassword.Text" xml:space="preserve">
    <value>Proteger a configuração com senha</value>
  </data>
	<data name="groupBox1.Text" xml:space="preserve">
    <value>Proteção da Configuração</value>
  </data>
	<data name="chkAskForExceptionDetails.Text" xml:space="preserve">
    <value>Informar sobre detalhes de exceções</value>
  </data>
	<data name="tabPage1.Text" xml:space="preserve">
    <value>Principal</value>
  </data>
	<data name="btnImport.Text" xml:space="preserve">
    <value>Importar Config</value>
  </data>
	<data name="btnExport.Text" xml:space="preserve">
    <value>Exportar Config</value>
  </data>
	<data name="lblLinkAttributions.Text" xml:space="preserve">
    <value>Créditos</value>
  </data>
	<data name="btnDonate.AccessibleDescription" xml:space="preserve">
    <value>Fazer donativo</value>
  </data>
	<data name="btnDonate.AccessibleName" xml:space="preserve">
    <value>Doação</value>
  </data>
	<data name="lblLinkLicense.Text" xml:space="preserve">
    <value>Licença</value>
  </data>
	<data name="label10.Size" type="System.Drawing.Size, System.Drawing">
		<value>279, 39</value>
	</data>
	<data name="label10.Text" xml:space="preserve">
    <value>Se gostar do TinyWall e usá-lo, favor considerar a possibilidade de fazer donativos para cobrir custos com hospedagem e seu desenvolvimento.</value>
  </data>
	<data name="label6.Text" xml:space="preserve">
    <value>Todos os direitos reservados.</value>
  </data>
	<data name="groupBox2.Text" xml:space="preserve">
    <value>Sobre o Programa (Traduzido por MCHAL.zetalk.com e Serfalas)</value>
  </data>
	<data name="btnUpdate.Text" xml:space="preserve">
    <value>Procurar atualização</value>
  </data>
	<data name="btnWeb.Text" xml:space="preserve">
    <value>Visitar a página do TW</value>
  </data>
	<data name="tabPage4.Text" xml:space="preserve">
    <value>Manutenção</value>
  </data>
	<data name="$this.Text" xml:space="preserve">
    <value>Configuração do TinyWall</value>
  </data>
</root>