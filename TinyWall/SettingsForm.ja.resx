<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="btnOK.Text" xml:space="preserve">
    <value>適用</value>
  </data>
  <data name="txtExceptionListFilter.AccessibleName" xml:space="preserve">
    <value>フィルタ</value>
  </data>
  <data name="btnAppRemoveAll.Text" xml:space="preserve">
    <value>すべて除去</value>
  </data>
  <data name="btnAppAutoDetect.Text" xml:space="preserve">
    <value>検出</value>
  </data>
  <data name="btnSubmitAssoc.Text" xml:space="preserve">
    <value>報告する</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>ここでネットワークへのアクセスを許可するアプリケーションを編集します。有効にされたアプリケーションのみがネットワークを利用することが可能になり、有効にされたコミュニケーションプロファイルのひとつとして分類されるトラフィックのみ送信/受信することができるようになります。</value>
  </data>
  <data name="btnAppRemove.Text" xml:space="preserve">
    <value>除去</value>
  </data>
  <data name="btnAppModify.Text" xml:space="preserve">
    <value>変更</value>
  </data>
  <data name="btnAppAdd.Text" xml:space="preserve">
    <value>アプリケーションを追加</value>
  </data>
  <data name="columnHeader1.Text" xml:space="preserve">
    <value>ファイル</value>
  </data>
  <data name="columnHeader2.Text" xml:space="preserve">
    <value>パス</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label4.Location" type="System.Drawing.Point, System.Drawing">
    <value>16, 78</value>
  </data>
  <data name="label4.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 13</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>フィルタ:</value>
  </data>
  <data name="tabPage3.Text" xml:space="preserve">
    <value>除外アプリケーション</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>このマシンで例外とする特殊なタスク、およびアプリケーションを選択してください。注: 推奨の例外を無効にするとあなたのシステムのユーザビリティとセキュリティが大幅に制限されてしまうという点にご注意ください。</value>
  </data>
  <data name="label2.Size" type="System.Drawing.Size, System.Drawing">
    <value>31, 13</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>任意</value>
  </data>
  <data name="label1.Size" type="System.Drawing.Size, System.Drawing">
    <value>31, 13</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>推奨</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>特殊例外</value>
  </data>
  <data name="label11.Size" type="System.Drawing.Size, System.Drawing">
    <value>34, 13</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>言語:</value>
  </data>
  <data name="chkEnableBlocklists.Size" type="System.Drawing.Size, System.Drawing">
    <value>128, 17</value>
  </data>
  <data name="chkEnableBlocklists.Text" xml:space="preserve">
    <value>ブロックリストを有効化</value>
  </data>
  <data name="chkLockHostsFile.Size" type="System.Drawing.Size, System.Drawing">
    <value>176, 17</value>
  </data>
  <data name="chkLockHostsFile.Text" xml:space="preserve">
    <value>Hosts ファイルの変更を防止する</value>
  </data>
  <data name="chkHostsBlocklist.Size" type="System.Drawing.Size, System.Drawing">
    <value>228, 17</value>
  </data>
  <data name="chkHostsBlocklist.Text" xml:space="preserve">
    <value>ドメイン基準のマルウェア、広告ブロックリスト</value>
  </data>
  <data name="chkAutoUpdateCheck.Size" type="System.Drawing.Size, System.Drawing">
    <value>191, 17</value>
  </data>
  <data name="chkAutoUpdateCheck.Text" xml:space="preserve">
    <value>アップデートの有無を自動的に確認</value>
  </data>
  <data name="chkBlockMalwarePorts.Size" type="System.Drawing.Size, System.Drawing">
    <value>189, 17</value>
  </data>
  <data name="chkBlockMalwarePorts.Text" xml:space="preserve">
    <value>ポート基準のマルウェアブロックリスト</value>
  </data>
  <data name="label9.Size" type="System.Drawing.Size, System.Drawing">
    <value>253, 46</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>有効になっているパスワードを変更したい時は、"パスワードを変更" にチェックを入れ、テキストフィールドを空にしておいてください。</value>
  </data>
  <data name="label8.Size" type="System.Drawing.Size, System.Drawing">
    <value>46, 13</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>再入力:</value>
  </data>
  <data name="label7.Size" type="System.Drawing.Size, System.Drawing">
    <value>57, 13</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>パスワード:</value>
  </data>
  <data name="chkChangePassword.Size" type="System.Drawing.Size, System.Drawing">
    <value>106, 17</value>
  </data>
  <data name="chkChangePassword.Text" xml:space="preserve">
    <value>パスワードを変更</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>パスワード保護</value>
  </data>
  <data name="chkAskForExceptionDetails.Size" type="System.Drawing.Size, System.Drawing">
    <value>147, 17</value>
  </data>
  <data name="chkAskForExceptionDetails.Text" xml:space="preserve">
    <value>例外時に詳細を表示する</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>一般</value>
  </data>
  <data name="btnImport.Text" xml:space="preserve">
    <value>インポート</value>
  </data>
  <data name="btnExport.Text" xml:space="preserve">
    <value>エクスポート</value>
  </data>
  <data name="btnDonate.AccessibleDescription" xml:space="preserve">
    <value>寄付する</value>
  </data>
  <data name="btnDonate.AccessibleName" xml:space="preserve">
    <value>寄付</value>
  </data>
  <data name="lblLinkLicense.Text" xml:space="preserve">
    <value>利用許諾契約</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>このフリーウェアプログラムに対して寄付することで、今後の開発の継続にご協力ください</value>
  </data>
  <data name="label12.Text" xml:space="preserve">
    <value>著作権 © 2011 Károly Pados</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>情報</value>
  </data>
  <data name="btnUpdate.Text" xml:space="preserve">
    <value>アップデート</value>
  </data>
  <data name="btnWeb.Text" xml:space="preserve">
    <value>ウェブサイトへ</value>
  </data>
  <data name="tabPage4.Text" xml:space="preserve">
    <value>メンテナンス</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>TinyWall ファイアウォール設定</value>
  </data>
</root>